FROM ubuntu:20.04
ENV ROS_VERSION=noetic

# Create user for later use
ENV USERNAME=bot
ENV HOME=/home/$USERNAME
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
	# These three would be necessary for real machine, since this is for simulation, we exclude them\
        # usermod -aG dialout $USERNAME && \
        # usermod -aG video $USERNAME && \
        # usermod -aG plugdev $USERNAME && \
        mkdir -p /etc/sudoers.d && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        # Replace 1000 with your user/group id
        usermod  --uid 1000 $USERNAME && \
        groupmod --gid 1000 $USERNAME

RUN chown -R $USERNAME:$USERNAME $HOME

# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install core utilities
RUN apt-get update && apt-get install -y \
    lsb-release \
    gnupg2 \
    curl \
    wget \
    git \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# Add ROS Noetic sources
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -

# Install ROS Noetic Desktop-Full
RUN apt-get update && apt-get install -y \
    ros-$ROS_VERSION-ros-base
    #ros-$ROS_VERSION-desktop-full

# Initialize rosdep
RUN apt-get install -y python3-rosdep \
    && rosdep init \
    && rosdep update

# Install catkin-tools (for catkin build, just my personal perference)
RUN apt-get update && apt-get install -y \
    python3-catkin-tools \
    && rm -rf /var/lib/apt/lists/*

# Source ROS setup
# ENV ROS_DISTRO=$ROS_VERSION
# ENV ROS_ROOT=/opt/ros/$ROS_DISTRO
# ENV ROS_PACKAGE_PATH=$ROS_ROOT/share
# ENV PATH=$ROS_ROOT/bin:$PATH
# ENV LD_LIBRARY_PATH=$ROS_ROOT/lib:$LD_LIBRARY_PATH
# ENV PYTHONPATH=$ROS_ROOT/lib/python3/dist-packages:$PYTHONPATH
ENV ROS_MASTER_URI=http://localhost:11311

# Use NCHC mirror for Taiwan
RUN sed -i 's|http://archive.ubuntu.com/ubuntu/|http://free.nchc.org.tw/ubuntu/|g' /etc/apt/sources.list

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    python3-pip \
    python3-catkin-tools \
    && rm -rf /var/lib/apt/lists/*

# Install additional ROS packages (Network issue in China, normally this is not needed)
RUN apt-get update -o Acquire::Retries=3 && \
    apt-get install -y --no-install-recommends \
# RUN apt-get update && apt-get install -y \
    ros-$ROS_VERSION-ackermann-msgs \
    ros-$ROS_VERSION-geometry2 \
    ros-$ROS_VERSION-hector-gazebo-plugins \
    ros-$ROS_VERSION-hector-models \
    ros-$ROS_VERSION-jsk-rviz-plugins \
    ros-$ROS_VERSION-ros-control \
    ros-$ROS_VERSION-ros-controllers \
    ros-$ROS_VERSION-velodyne-simulator \
    ros-$ROS_VERSION-joint-state-publisher \
    ros-$ROS_VERSION-robot-state-publisher \
    && rm -rf /var/lib/apt/lists/*

# Create workspace directory
WORKDIR $HOME
RUN rm -rf $HOME/Downloads

# Make sure .ros and .config directory exists and is owned by bot
RUN mkdir -p $HOME/.ros && chown -R bot:bot $HOME/.ros
RUN mkdir -p $HOME/.config && chown -R bot:bot $HOME/.config

# Source ROS environment in bashrc
RUN echo "source /opt/ros/$ROS_VERSION/setup.bash" >> $HOME/.bashrc

# Set default shell
CMD ["bash"]
